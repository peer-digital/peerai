"""add updated_by to system_settings

Revision ID: f8243840b28d
Revises: 9597eef8850a
Create Date: 2025-02-22 22:04:10.588025

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f8243840b28d"
down_revision: Union[str, None] = "9597eef8850a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "system_settings", sa.Column("updated_by", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(None, "system_settings", "users", ["updated_by"], ["id"])

    op.alter_column(
        "system_settings",
        "rate_limit",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "system_settings",
        "security",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "system_settings",
        "models",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "system_settings",
        "monitoring",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "system_settings",
        "beta_features",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=True,
    )
    op.alter_column(
        "system_settings",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
    )
    op.alter_column(
        "system_settings",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.create_index(
        op.f("ix_system_settings_id"), "system_settings", ["id"], unique=False
    )
    op.drop_column("usage_records", "created_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "system_settings", type_="foreignkey")
    op.drop_column("system_settings", "updated_by")

    op.add_column(
        "usage_records",
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.drop_index(op.f("ix_system_settings_id"), table_name="system_settings")
    op.alter_column(
        "system_settings",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "system_settings",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
    )
    op.alter_column(
        "system_settings",
        "beta_features",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "system_settings",
        "monitoring",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "system_settings",
        "models",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "system_settings",
        "security",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    op.alter_column(
        "system_settings",
        "rate_limit",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        nullable=False,
    )
    # ### end Alembic commands ###
