name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # @note: GitHub's official checkout action - do not change URL
      
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 158.174.210.91 >> ~/.ssh/known_hosts
      
      - name: Deploy to VM
        env:
          GH_PAT: ${{ secrets.GH_PAT }}  # @note: Personal Access Token for GitHub authentication
          GITHUB_USERNAME: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository_name }}
        run: |
          # Extract repository name from full repository path
          REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          echo "Repository name: $REPO_NAME"
          
          # Make scripts executable
          chmod +x ./scripts/setup_vm.sh
          chmod +x ./scripts/setup_ssh.sh
          chmod +x ./scripts/deploy.sh
          chmod +x ./scripts/restore_db.sh
          chmod +x ./scripts/check_deployment.sh
          chmod +x ./scripts/setup_github_auth.sh
          chmod +x ./scripts/fix_permissions.sh
          chmod +x ./scripts/init_db.sh
          chmod +x ./scripts/init_db_auto.sh
          chmod +x ./scripts/debug_migrations.sh
          chmod +x ./scripts/fix_github_actions.sh
          
          # Transfer deployment scripts
          scp -r ./deployment ubuntu@158.174.210.91:/home/ubuntu/
          
          # Transfer scripts
          scp -r ./scripts ubuntu@158.174.210.91:/home/ubuntu/
          
          # Run setup script if this is the first deployment
          ssh ubuntu@158.174.210.91 "[ -d /home/ubuntu/peer-ai ] || /home/ubuntu/scripts/setup_vm.sh"
          
          # Set up SSH keys
          ssh ubuntu@158.174.210.91 "/home/ubuntu/scripts/setup_ssh.sh"
          
          # Set up GitHub authentication
          ssh ubuntu@158.174.210.91 "GITHUB_TOKEN='$GH_PAT' GITHUB_USER='$GITHUB_USERNAME' GITHUB_REPO='$REPO_NAME' /home/ubuntu/scripts/setup_github_auth.sh"
          
          # Fix permissions
          ssh ubuntu@158.174.210.91 "/home/ubuntu/scripts/fix_permissions.sh"
          
          # Run deployment script
          ssh ubuntu@158.174.210.91 "cd /home/ubuntu/peer-ai && ./scripts/deploy.sh" || echo "Deployment script failed, continuing with fixes"
          
          # Run database initialization script (non-interactive)
          ssh ubuntu@158.174.210.91 "cd /home/ubuntu/peer-ai && ./scripts/init_db_auto.sh" || echo "Database initialization failed, continuing with fixes"
          
          # Run debug and fix scripts if needed
          ssh ubuntu@158.174.210.91 "cd /home/ubuntu/peer-ai && ./scripts/debug_migrations.sh" || echo "Debug migrations script failed, continuing with fixes"
          ssh ubuntu@158.174.210.91 "cd /home/ubuntu/peer-ai && ./scripts/fix_github_actions.sh" || echo "Fix GitHub Actions script failed, continuing with checks"
          
          # Check deployment status
          ssh ubuntu@158.174.210.91 "cd /home/ubuntu/peer-ai && ./scripts/check_deployment.sh" 