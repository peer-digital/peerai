name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # @note: GitHub's official checkout action - do not change URL
      
      - name: Set default repository values
        run: |
          # Set hardcoded values for the correct repository
          echo "GITHUB_REPO_OWNER=peer-digital" >> $GITHUB_ENV
          echo "REPO_NAME=peerai" >> $GITHUB_ENV
          echo "Using hardcoded repository: peer-digital/peerai"
      
      - name: Extract repository name (for reference only)
        run: |
          # Extract repository name from full repository path
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Full repository: ${{ github.repository }}"
          echo "Repository name: $REPO_NAME"
          echo "NOTE: Using hardcoded repository peer-digital/peerai for deployment"
      
      - name: Verify GitHub token
        run: |
          # For public repositories, we don't need to verify repository access with a token
          # Just check if the repository exists
          echo "Testing repository access..."
          REPO_PATH="${{ env.GITHUB_REPO_OWNER }}/${{ env.REPO_NAME }}"
          echo "Checking access to repository: $REPO_PATH"
          if curl -s "https://api.github.com/repos/${REPO_PATH}" | grep -q "\"name\":"; then
            echo "✅ Repository access confirmed"
          else
            echo "❌ Cannot access repository"
            echo "Please ensure the repository exists at https://github.com/${REPO_PATH}"
            exit 1
          fi
      
      - name: Make scripts executable
        run: |
          chmod +x ./scripts/*.sh
      
      - name: Transfer scripts via SCP
        uses: appleboy/scp-action@v0.1.4  # @note: Reliable SCP action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "scripts/,deployment/"
          target: "/home/ubuntu/"
          strip_components: 0
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
      
      - name: Run diagnostic script
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            chmod +x /home/ubuntu/scripts/diagnose_ssh.sh
            /home/ubuntu/scripts/diagnose_ssh.sh
      
      - name: Setup VM if needed
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            [ -d /home/ubuntu/peer-ai ] || /home/ubuntu/scripts/setup_vm.sh
      
      - name: Setup SSH keys
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            /home/ubuntu/scripts/setup_ssh.sh
      
      - name: Setup GitHub authentication
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          envs: GITHUB_REPO_OWNER,REPO_NAME
          script: |
            # Debug environment variables
            echo "GITHUB_REPO_OWNER: ${GITHUB_REPO_OWNER}"
            echo "REPO_NAME: ${REPO_NAME}"
            
            # Use explicit environment variables with the correct repository information
            # No token needed for public repositories
            GITHUB_USER="${GITHUB_REPO_OWNER}" GITHUB_REPO="${REPO_NAME}" /home/ubuntu/scripts/setup_github_auth.sh
        env:
          GITHUB_REPO_OWNER: ${{ env.GITHUB_REPO_OWNER }}
          REPO_NAME: ${{ env.REPO_NAME }}
      
      - name: Fix permissions
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            /home/ubuntu/scripts/fix_permissions.sh
      
      - name: Run deployment script
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            cd /home/ubuntu/peer-ai && ./scripts/deploy.sh
      
      - name: Fix database migrations
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            chmod +x /home/ubuntu/scripts/fix_migration.sh
            cd /home/ubuntu/peer-ai && /home/ubuntu/scripts/fix_migration.sh
      
      - name: Test database connection
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            chmod +x /home/ubuntu/scripts/ssh_to_db.sh
            chmod +x /home/ubuntu/scripts/test_db.sh
            chmod +x /home/ubuntu/scripts/test_db_connection.py
            cd /home/ubuntu/peer-ai && /home/ubuntu/scripts/test_db.sh
      
      - name: Initialize database
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            cd /home/ubuntu/peer-ai && ./scripts/init_db_auto.sh
      
      - name: Run fix scripts
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            cd /home/ubuntu/peer-ai && ./scripts/debug_migrations.sh || echo "Debug migrations script failed, continuing"
            cd /home/ubuntu/peer-ai && ./scripts/fix_github_actions.sh || echo "Fix GitHub Actions script failed, continuing"
            cd /home/ubuntu/peer-ai && ./scripts/fix_frontend_build.sh || echo "Fix frontend build script failed, continuing"
      
      - name: Check deployment status
        uses: appleboy/ssh-action@v1.0.0  # @note: Reliable SSH action for GitHub Actions
        with:
          host: 158.174.210.91
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Disable host key checking to handle host key changes
          use_insecure_cipher: true
          script: |
            cd /home/ubuntu/peer-ai && ./scripts/check_deployment.sh 