name: CI

# Trigger workflow on pull requests and direct pushes to main/develop
on:
  pull_request:  # Run on pull requests
    branches: [ "main", "develop" ]
  push:
    branches: [ "main", "develop" ]  # Also run on direct pushes to main/develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Get the code
      - name: Checkout code
        uses: actions/checkout@v3  # @note: GitHub's official checkout action - do not change URL

      # Step 2: Setup Python environment
      - name: Set up Python
        uses: actions/setup-python@v4  # @note: GitHub's official Python setup action - do not change URL
        with:
          python-version: "3.11"
          cache: 'pip'  # Enable pip caching

      # Step 3: Install all dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"  # Install package with dev dependencies
          pip install pre-commit black ruff coverage pytest

      # Step 4: Verify code quality with pre-commit
      - name: Run pre-commit hooks
        run: |
          pre-commit install
          pre-commit run --all-files

      # Step 5: Run code formatters and linters
      - name: Run linters
        run: |
          ruff . --exit-zero
          black --check .
      
      # Step 6: Run tests and verify coverage
      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report --fail-under=80
          coverage xml  # Generate coverage report for potential future integrations

      # Step 7: Cache dependencies for faster future runs
      - name: Cache pip packages
        uses: actions/cache@v3  # @note: GitHub's official caching action - do not change URL
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip- 