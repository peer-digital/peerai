server {
    listen 80;
    server_name 158.174.210.91;  # Replace with your server IP or domain name

    root /home/ubuntu/peer-ai/frontend/dist; # Path to built frontend
    index index.html;

    # @important: Main frontend route
    location / {
        try_files $uri $uri/ /index.html;
    }

    # @important: API proxy with consistent URL pattern for all deployment scenarios
    location /api {
        # Remove trailing slashes for consistent URL handling
        rewrite ^/(.*)/$ /$1 permanent;
        
        # Proxy to backend FastAPI service, no trailing slash to avoid path issues
        proxy_pass http://localhost:8000/api;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;          # For websockets
        proxy_set_header Connection "upgrade";          # For websockets
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Enable debug logging for troubleshooting
        error_log /var/log/nginx/api_error.log debug;
        access_log /var/log/nginx/api_access.log;
        
        # Increase timeouts for streaming responses
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Add CORS headers for development
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'X-API-Key, Authorization, Content-Type, Accept, Origin, X-Requested-With';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Add CORS headers for actual requests
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'X-API-Key, Authorization, Content-Type, Accept, Origin, X-Requested-With';
    }

    # Special location for auth endpoints to ensure they work without issues
    location /api/auth {
        proxy_pass http://localhost:8000/api/auth;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Enable debug logging for auth endpoints
        error_log /var/log/nginx/auth_error.log debug;
        access_log /var/log/nginx/auth_access.log;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://localhost:8000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Client-side routing - all routes that don't match other locations should serve index.html
    location @rewrites {
        rewrite ^(.+)$ /index.html last;
    }
    
    # Log configuration
    access_log /var/log/nginx/peerai_access.log;
    error_log /var/log/nginx/peerai_error.log;
}

# Only include the SSL server if certificates exist
# server {
#     listen 443 ssl;
#     server_name api.peerai.se;  # Replace with your domain
# 
#     # SSL configuration - requires valid certificates
#     ssl_certificate /etc/letsencrypt/live/api.peerai.se/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.peerai.se/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
# 
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options "DENY" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
# 
#     # Proxy to FastAPI application
#     location / {
#         proxy_pass http://localhost:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# } 