"""add_email_verification_fields

Revision ID: 16e5e60f9836
Revises: add_referral_system
Create Date: 2025-03-08 19:22:58.548409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '16e5e60f9836'
down_revision: Union[str, None] = 'add_referral_system'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ai_models', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('ai_models', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_providers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_providers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_request_mappings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_request_mappings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('referrals', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('uq_referrals_referee_id', 'referrals', type_='unique')
    op.create_index(op.f('ix_referrals_id'), 'referrals', ['id'], unique=False)
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('email_verification_token', sa.String(), nullable=True))
    op.add_column('users', sa.Column('email_verification_sent_at', sa.DateTime(), nullable=True))
    op.alter_column('users', 'token_limit',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('10000'))
    op.drop_constraint('uq_users_referral_code', 'users', type_='unique')
    op.create_unique_constraint(op.f('uq_users_email_verification_token'), 'users', ['email_verification_token'])
    op.drop_constraint('fk_users_referred_by', 'users', type_='foreignkey')
    op.drop_column('users', 'referred_by_id')
    op.drop_column('users', 'referral_code')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('referral_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('referred_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_users_referred_by', 'users', 'users', ['referred_by_id'], ['id'])
    op.drop_constraint(op.f('uq_users_email_verification_token'), 'users', type_='unique')
    op.create_unique_constraint('uq_users_referral_code', 'users', ['referral_code'])
    op.alter_column('users', 'token_limit',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('10000'))
    op.drop_column('users', 'email_verification_sent_at')
    op.drop_column('users', 'email_verification_token')
    op.drop_column('users', 'email_verified')
    op.drop_index(op.f('ix_referrals_id'), table_name='referrals')
    op.create_unique_constraint('uq_referrals_referee_id', 'referrals', ['referee_id'])
    op.alter_column('referrals', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('model_request_mappings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_request_mappings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_providers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('model_providers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ai_models', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ai_models', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###
