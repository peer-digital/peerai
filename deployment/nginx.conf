server {
    listen 80;
    server_name 158.174.210.91;  # Replace with your server IP or domain name

    root /home/ubuntu/peer-ai/frontend/dist; # Path to built frontend
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://localhost:8000/api; # Correct proxy pass, NO trailing slash
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;          # For websockets
        proxy_set_header Connection "upgrade";          # For websockets
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increase timeouts for streaming responses
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://localhost:8000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Deny access to .htaccess files
    location ~ /\.ht {
        deny all;
    }

    # Client-side routing - all routes that don't match other locations should serve index.html
    location @rewrites {
        rewrite ^(.+)$ /index.html last;
    }
}

# Only include the SSL server if certificates exist
# server {
#     listen 443 ssl;
#     server_name api.peerai.se;  # Replace with your domain
# 
#     # SSL configuration - requires valid certificates
#     ssl_certificate /etc/letsencrypt/live/api.peerai.se/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.peerai.se/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
# 
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options "DENY" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
# 
#     # Proxy to FastAPI application
#     location / {
#         proxy_pass http://localhost:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# } 